

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jun  9 19:00:38 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0008                     _PORTD	set	8
   128  0019                     _TXREG	set	25
   129  001E                     _ADRESH	set	30
   130  000C                     _PIR1bits	set	12
   131  0018                     _RCSTAbits	set	24
   132  001F                     _ADCON0bits	set	31
   133  0001                     _TMR0	set	1
   134  000B                     _INTCONbits	set	11
   135  0086                     _TRISB	set	134
   136  0088                     _TRISD	set	136
   137  0098                     _TXSTAbits	set	152
   138  009E                     _ADRESL	set	158
   139  009F                     _ADCON1bits	set	159
   140  0081                     _OPTION_REGbits	set	129
   141  008F                     _OSCCONbits	set	143
   142  0189                     _ANSELH	set	393
   143  0188                     _ANSEL	set	392
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  07FC                     start_initialization:	
   149  07FC                     __initialization:	
   150  07FC                     end_of_initialization:	
   151                           ;End of C runtime variable initialization code
   152                           
   153  07FC                     __end_of__initialization:	
   154  07FC  0183               	clrf	3
   155  07FD  120A  118A  2F88   	ljmp	_main	;jump to C main() function
   156                           
   157                           	psect	cstackCOMMON
   158  0070                     __pcstackCOMMON:	
   159  0070                     ?_configTimer:	
   160  0070                     ??_configTimer:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0070                     ?_configADC:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ??_configADC:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ?_configUART:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ??_configUART:	
   173                           ; 1 bytes @ 0x0
   174                           
   175  0070                     ?_waitTimer:	
   176                           ; 1 bytes @ 0x0
   177                           
   178  0070                     ??_waitTimer:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0070                     ?_runADC:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0070                     ??_runADC:	
   185                           ; 1 bytes @ 0x0
   186                           
   187  0070                     ?_sendADC:	
   188                           ; 1 bytes @ 0x0
   189                           
   190  0070                     ??_sendADC:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ?_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196                           
   197                           ; 1 bytes @ 0x0
   198  0070                     	ds	2
   199  0072                     sendADC@aux:	
   200                           
   201                           ; 1 bytes @ 0x2
   202  0072                     	ds	1
   203  0073                     sendADC@parteB:	
   204                           
   205                           ; 1 bytes @ 0x3
   206  0073                     	ds	1
   207  0074                     sendADC@parteA:	
   208                           
   209                           ; 1 bytes @ 0x4
   210  0074                     	ds	1
   211  0075                     ??_main:	
   212                           
   213                           	psect	maintext
   214  0788                     __pmaintext:	
   215                           ; 1 bytes @ 0x5
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 67 in file "adc_main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, pclath, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   235 ;;      Params:         0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called:    1
   241 ;; This function calls:
   242 ;;		_configADC
   243 ;;		_configTimer
   244 ;;		_configUART
   245 ;;		_runADC
   246 ;;		_sendADC
   247 ;;		_waitTimer
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  0788                     _main:	
   256                           
   257                           ;adc_main.c: 68: TRISD=0X00;
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   261  0788  1683               	bsf	3,5	;RP0=1, select bank1
   262  0789  1303               	bcf	3,6	;RP1=0, select bank1
   263  078A  0188               	clrf	8	;volatile
   264                           
   265                           ;adc_main.c: 69: TRISB=0XFF;
   266  078B  30FF               	movlw	255
   267  078C  0086               	movwf	6	;volatile
   268                           
   269                           ;adc_main.c: 71: configTimer();
   270  078D  120A  118A  2761  120A  118A  	fcall	_configTimer
   271                           
   272                           ;adc_main.c: 72: configADC();
   273  0792  120A  118A  2778  120A  118A  	fcall	_configADC
   274                           
   275                           ;adc_main.c: 73: configUART();
   276  0797  120A  118A  276C  120A  118A  	fcall	_configUART
   277                           
   278                           ;adc_main.c: 75: PORTD=0x0F;
   279  079C  300F               	movlw	15
   280  079D  1283               	bcf	3,5	;RP0=0, select bank0
   281  079E  1303               	bcf	3,6	;RP1=0, select bank0
   282  079F  0088               	movwf	8	;volatile
   283  07A0                     l570:	
   284                           ;adc_main.c: 77: while(1) {
   285                           
   286                           
   287                           ;adc_main.c: 78: waitTimer();
   288  07A0  120A  118A  275A  120A  118A  	fcall	_waitTimer
   289                           
   290                           ;adc_main.c: 79: runADC();
   291  07A5  120A  118A  2753  120A  118A  	fcall	_runADC
   292                           
   293                           ;adc_main.c: 80: waitTimer();
   294  07AA  120A  118A  275A  120A  118A  	fcall	_waitTimer
   295                           
   296                           ;adc_main.c: 81: sendADC();
   297  07AF  120A  118A  27B5  120A  118A  	fcall	_sendADC
   298  07B4  2FA0               	goto	l570
   299  07B5                     __end_of_main:	
   300                           
   301                           	psect	text1
   302  075A                     __ptext1:	
   303 ;; *************** function _waitTimer *****************
   304 ;; Defined at:
   305 ;;		line 35 in file "adc_main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		status,2
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   319 ;;      Params:         0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0
   322 ;;      Totals:         0       0       0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels used:    1
   325 ;; This function calls:
   326 ;;		Nothing
   327 ;; This function is called by:
   328 ;;		_main
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           
   333                           ;psect for function _waitTimer
   334  075A                     _waitTimer:	
   335  075A                     l46:	
   336                           ;adc_main.c: 37: ;
   337                           
   338                           ;adc_main.c: 36: while(INTCONbits.T0IF != 1)
   339                           
   340                           ;incstack = 0
   341                           ; Regs used in _waitTimer: [status,2]
   342                           
   343  075A  1D0B               	btfss	11,2	;volatile
   344  075B  2F5A               	goto	l46
   345                           
   346                           ;adc_main.c: 38: TMR0 = 0;
   347  075C  1283               	bcf	3,5	;RP0=0, select bank0
   348  075D  1303               	bcf	3,6	;RP1=0, select bank0
   349  075E  0181               	clrf	1	;volatile
   350                           
   351                           ;adc_main.c: 39: INTCONbits.T0IF = 0;
   352  075F  110B               	bcf	11,2	;volatile
   353  0760  0008               	return
   354  0761                     __end_of_waitTimer:	
   355                           
   356                           	psect	text2
   357  07B5                     __ptext2:	
   358 ;; *************** function _sendADC *****************
   359 ;; Defined at:
   360 ;;		line 49 in file "adc_main.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;  parteA          1    4[COMMON] unsigned char 
   365 ;;  parteB          1    3[COMMON] unsigned char 
   366 ;;  aux             1    2[COMMON] unsigned char 
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, status,2, status,0
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         3       0       0       0       0
   378 ;;      Temps:          2       0       0       0       0
   379 ;;      Totals:         5       0       0       0       0
   380 ;;Total ram usage:        5 bytes
   381 ;; Hardware stack levels used:    1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _sendADC
   391  07B5                     _sendADC:	
   392                           
   393                           ;adc_main.c: 50: unsigned char parteB, parteA, aux;
   394                           ;adc_main.c: 51: parteA = ADRESH;
   395                           
   396                           ;incstack = 0
   397                           ; Regs used in _sendADC: [wreg+status,2+status,0]
   398  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   399  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   400  07B7  081E               	movf	30,w	;volatile
   401  07B8  00F0               	movwf	??_sendADC
   402  07B9  0870               	movf	??_sendADC,w
   403  07BA  00F4               	movwf	sendADC@parteA
   404                           
   405                           ;adc_main.c: 52: parteB = ADRESL;
   406  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   407  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   408  07BD  081E               	movf	30,w	;volatile
   409  07BE  00F0               	movwf	??_sendADC
   410  07BF  0870               	movf	??_sendADC,w
   411  07C0  00F3               	movwf	sendADC@parteB
   412                           
   413                           ;adc_main.c: 54: aux = parteA & 0x07;
   414  07C1  0874               	movf	sendADC@parteA,w
   415  07C2  3907               	andlw	7
   416  07C3  00F0               	movwf	??_sendADC
   417  07C4  0870               	movf	??_sendADC,w
   418  07C5  00F2               	movwf	sendADC@aux
   419                           
   420                           ;adc_main.c: 55: aux = aux << 2;
   421  07C6  0872               	movf	sendADC@aux,w
   422  07C7  00F0               	movwf	??_sendADC
   423  07C8  3001               	movlw	1
   424  07C9                     u35:	
   425  07C9  1003               	clrc
   426  07CA  0DF0               	rlf	??_sendADC,f
   427  07CB  3EFF               	addlw	-1
   428  07CC  1D03               	skipz
   429  07CD  2FC9               	goto	u35
   430  07CE  1003               	clrc
   431  07CF  0D70               	rlf	??_sendADC,w
   432  07D0  00F1               	movwf	??_sendADC+1
   433  07D1  0871               	movf	??_sendADC+1,w
   434  07D2  00F2               	movwf	sendADC@aux
   435                           
   436                           ;adc_main.c: 57: parteA = parteA >> 3;
   437  07D3  0874               	movf	sendADC@parteA,w
   438  07D4  00F0               	movwf	??_sendADC
   439  07D5  3003               	movlw	3
   440  07D6                     u45:	
   441  07D6  1003               	clrc
   442  07D7  0CF0               	rrf	??_sendADC,f
   443  07D8  3EFF               	addlw	-1
   444  07D9  1D03               	skipz
   445  07DA  2FD6               	goto	u45
   446  07DB  0870               	movf	??_sendADC,w
   447  07DC  00F1               	movwf	??_sendADC+1
   448  07DD  0871               	movf	??_sendADC+1,w
   449  07DE  00F4               	movwf	sendADC@parteA
   450                           
   451                           ;adc_main.c: 58: parteA = parteA | 0x80;
   452  07DF  0874               	movf	sendADC@parteA,w
   453  07E0  3880               	iorlw	128
   454  07E1  00F0               	movwf	??_sendADC
   455  07E2  0870               	movf	??_sendADC,w
   456  07E3  00F4               	movwf	sendADC@parteA
   457                           
   458                           ;adc_main.c: 60: parteB = parteB >> 6;
   459  07E4  0873               	movf	sendADC@parteB,w
   460  07E5  00F0               	movwf	??_sendADC
   461  07E6  3006               	movlw	6
   462  07E7                     u55:	
   463  07E7  1003               	clrc
   464  07E8  0CF0               	rrf	??_sendADC,f
   465  07E9  3EFF               	addlw	-1
   466  07EA  1D03               	skipz
   467  07EB  2FE7               	goto	u55
   468  07EC  0870               	movf	??_sendADC,w
   469  07ED  00F1               	movwf	??_sendADC+1
   470  07EE  0871               	movf	??_sendADC+1,w
   471  07EF  00F3               	movwf	sendADC@parteB
   472                           
   473                           ;adc_main.c: 61: parteB = parteB | aux;
   474  07F0  0873               	movf	sendADC@parteB,w
   475  07F1  0472               	iorwf	sendADC@aux,w
   476  07F2  00F0               	movwf	??_sendADC
   477  07F3  0870               	movf	??_sendADC,w
   478  07F4  00F3               	movwf	sendADC@parteB
   479                           
   480                           ;adc_main.c: 63: TXREG = parteB;
   481  07F5  0873               	movf	sendADC@parteB,w
   482  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   483  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   484  07F8  0099               	movwf	25	;volatile
   485                           
   486                           ;adc_main.c: 64: TXREG = parteA;
   487  07F9  0874               	movf	sendADC@parteA,w
   488  07FA  0099               	movwf	25	;volatile
   489  07FB  0008               	return
   490  07FC                     __end_of_sendADC:	
   491                           
   492                           	psect	text3
   493  0753                     __ptext3:	
   494 ;; *************** function _runADC *****************
   495 ;; Defined at:
   496 ;;		line 42 in file "adc_main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		None
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0
   513 ;;      Totals:         0       0       0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           
   524                           ;psect for function _runADC
   525  0753                     _runADC:	
   526                           
   527                           ;adc_main.c: 43: ADCON0bits.GO = 1;
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _runADC: []
   531  0753  1283               	bcf	3,5	;RP0=0, select bank0
   532  0754  1303               	bcf	3,6	;RP1=0, select bank0
   533  0755  149F               	bsf	31,1	;volatile
   534  0756                     l52:	
   535                           ;adc_main.c: 45: ;
   536                           
   537                           ;adc_main.c: 44: while(PIR1bits.ADIF != 1)
   538                           
   539  0756  1F0C               	btfss	12,6	;volatile
   540  0757  2F56               	goto	l52
   541                           
   542                           ;adc_main.c: 46: PIR1bits.ADIF = 0;
   543  0758  130C               	bcf	12,6	;volatile
   544  0759  0008               	return
   545  075A                     __end_of_runADC:	
   546                           
   547                           	psect	text4
   548  076C                     __ptext4:	
   549 ;; *************** function _configUART *****************
   550 ;; Defined at:
   551 ;;		line 27 in file "adc_main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		None
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _configUART
   580  076C                     _configUART:	
   581                           
   582                           ;adc_main.c: 28: RCSTAbits.SPEN = 1;
   583                           
   584                           ;incstack = 0
   585                           ; Regs used in _configUART: []
   586  076C  1283               	bcf	3,5	;RP0=0, select bank0
   587  076D  1303               	bcf	3,6	;RP1=0, select bank0
   588  076E  1798               	bsf	24,7	;volatile
   589                           
   590                           ;adc_main.c: 29: RCSTAbits.CREN = 1;
   591  076F  1618               	bsf	24,4	;volatile
   592                           
   593                           ;adc_main.c: 30: TXSTAbits.BRGH = 1;
   594  0770  1683               	bsf	3,5	;RP0=1, select bank1
   595  0771  1303               	bcf	3,6	;RP1=0, select bank1
   596  0772  1518               	bsf	24,2	;volatile
   597                           
   598                           ;adc_main.c: 31: TXSTAbits.TXEN = 1;
   599  0773  1698               	bsf	24,5	;volatile
   600                           
   601                           ;adc_main.c: 32: PIR1bits.ADIF=0;
   602  0774  1283               	bcf	3,5	;RP0=0, select bank0
   603  0775  1303               	bcf	3,6	;RP1=0, select bank0
   604  0776  130C               	bcf	12,6	;volatile
   605  0777  0008               	return
   606  0778                     __end_of_configUART:	
   607                           
   608                           	psect	text5
   609  0761                     __ptext5:	
   610 ;; *************** function _configTimer *****************
   611 ;; Defined at:
   612 ;;		line 8 in file "adc_main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		status,2
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           
   640                           ;psect for function _configTimer
   641  0761                     _configTimer:	
   642                           
   643                           ;adc_main.c: 9: OSCCONbits.IRCF2 = 0;
   644                           
   645                           ;incstack = 0
   646                           ; Regs used in _configTimer: [status,2]
   647  0761  1683               	bsf	3,5	;RP0=1, select bank1
   648  0762  1303               	bcf	3,6	;RP1=0, select bank1
   649  0763  130F               	bcf	15,6	;volatile
   650                           
   651                           ;adc_main.c: 10: OPTION_REGbits.PS1 = 0;
   652  0764  1081               	bcf	1,1	;volatile
   653                           
   654                           ;adc_main.c: 11: OPTION_REGbits.PSA = 0;
   655  0765  1181               	bcf	1,3	;volatile
   656                           
   657                           ;adc_main.c: 12: OPTION_REGbits.T0CS = 0;
   658  0766  1281               	bcf	1,5	;volatile
   659                           
   660                           ;adc_main.c: 13: INTCONbits.T0IF = 0;
   661  0767  110B               	bcf	11,2	;volatile
   662                           
   663                           ;adc_main.c: 14: TMR0 = 0;
   664  0768  1283               	bcf	3,5	;RP0=0, select bank0
   665  0769  1303               	bcf	3,6	;RP1=0, select bank0
   666  076A  0181               	clrf	1	;volatile
   667  076B  0008               	return
   668  076C                     __end_of_configTimer:	
   669                           
   670                           	psect	text6
   671  0778                     __ptext6:	
   672 ;; *************** function _configADC *****************
   673 ;; Defined at:
   674 ;;		line 17 in file "adc_main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		status,2
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _configADC
   703  0778                     _configADC:	
   704                           
   705                           ;adc_main.c: 18: ADCON0bits.ADON = 1;
   706                           
   707                           ;incstack = 0
   708                           ; Regs used in _configADC: [status,2]
   709  0778  1283               	bcf	3,5	;RP0=0, select bank0
   710  0779  1303               	bcf	3,6	;RP1=0, select bank0
   711  077A  141F               	bsf	31,0	;volatile
   712                           
   713                           ;adc_main.c: 19: ADCON0bits.CHS3 = 1;
   714  077B  169F               	bsf	31,5	;volatile
   715                           
   716                           ;adc_main.c: 20: ADCON0bits.ADCS1 = 0;
   717  077C  139F               	bcf	31,7	;volatile
   718                           
   719                           ;adc_main.c: 21: ADCON1bits.ADFM = 0;
   720  077D  1683               	bsf	3,5	;RP0=1, select bank1
   721  077E  1303               	bcf	3,6	;RP1=0, select bank1
   722  077F  139F               	bcf	31,7	;volatile
   723                           
   724                           ;adc_main.c: 22: ANSEL= 0;
   725  0780  1683               	bsf	3,5	;RP0=1, select bank3
   726  0781  1703               	bsf	3,6	;RP1=1, select bank3
   727  0782  0188               	clrf	8	;volatile
   728                           
   729                           ;adc_main.c: 23: ANSELH = 0;
   730  0783  0189               	clrf	9	;volatile
   731                           
   732                           ;adc_main.c: 24: ADRESL = 0;
   733  0784  1683               	bsf	3,5	;RP0=1, select bank1
   734  0785  1303               	bcf	3,6	;RP1=0, select bank1
   735  0786  019E               	clrf	30	;volatile
   736  0787  0008               	return
   737  0788                     __end_of_configADC:	
   738  007E                     btemp	set	126	;btemp
   739  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sendADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     135
                          _configADC
                        _configTimer
                         _configUART
                             _runADC
                            _sendADC
                          _waitTimer
 ---------------------------------------------------------------------------------
 (1) _waitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendADC                                              5     5      0     135
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configUART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configADC
   _configTimer
   _configUART
   _runADC
   _sendADC
   _waitTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jun  9 19:00:38 2018

                      l52 0756                        l46 075A                        u35 07C9  
                      u45 07D6                        u55 07E7                       l570 07A0  
                    _TMR0 0001                      _main 0788                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000           __end_of_sendADC 07FC                     status 0003  
                   wtemp0 007E           __initialization 07FC              __end_of_main 07B5  
                  ??_main 0075                    _ADRESH 001E                    _ADRESL 009E  
                  _ANSELH 0189      __size_of_configTimer 000B                    _runADC 0753  
               ??_sendADC 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
          _OPTION_REGbits 0081        __size_of_configADC 0010                __pmaintext 0788  
                 ?_runADC 0070        __size_of_waitTimer 0007                _configUART 076C  
       __end_of_configADC 0788           __size_of_runADC 0007                   __ptext1 075A  
                 __ptext2 07B5                   __ptext3 0753                   __ptext4 076C  
                 __ptext5 0761                   __ptext6 0778                   _sendADC 07B5  
    end_of_initialization 07FC         __end_of_waitTimer 0761                 _RCSTAbits 0018  
             ?_configUART 0070                 _TXSTAbits 0098             ??_configTimer 0070  
          __end_of_runADC 075A       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __size_of_configUART 000C       __end_of_configTimer 076C                  ??_runADC 0070  
              sendADC@aux 0072                 ___latbits 0002                 _configADC 0778  
                ?_sendADC 0070               _configTimer 0761                  _PIR1bits 000C  
               _waitTimer 075A                ?_configADC 0070                _ADCON0bits 001F  
              _ADCON1bits 009F              ??_configUART 0070        __end_of_configUART 0778  
              ?_waitTimer 0070          __size_of_sendADC 0047             __size_of_main 002D  
             ??_configADC 0070                _INTCONbits 000B                _OSCCONbits 008F  
             ??_waitTimer 0070             sendADC@parteA 0074             sendADC@parteB 0073  
            ?_configTimer 0070  
