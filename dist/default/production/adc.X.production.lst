

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Jun  9 21:44:19 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	text6,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0008                     _PORTD	set	8
   128  0019                     _TXREG	set	25
   129  001E                     _ADRESH	set	30
   130  000C                     _PIR1bits	set	12
   131  0018                     _RCSTAbits	set	24
   132  001F                     _ADCON0bits	set	31
   133  0001                     _TMR0	set	1
   134  000B                     _INTCONbits	set	11
   135  0086                     _TRISB	set	134
   136  0088                     _TRISD	set	136
   137  0098                     _TXSTAbits	set	152
   138  009E                     _ADRESL	set	158
   139  009F                     _ADCON1bits	set	159
   140  0081                     _OPTION_REGbits	set	129
   141  008F                     _OSCCONbits	set	143
   142  0189                     _ANSELH	set	393
   143  0188                     _ANSEL	set	392
   144                           
   145                           ; #config settings
   146  0000                     
   147                           	psect	cinit
   148  07FC                     start_initialization:	
   149  07FC                     __initialization:	
   150  07FC                     end_of_initialization:	
   151                           ;End of C runtime variable initialization code
   152                           
   153  07FC                     __end_of__initialization:	
   154  07FC  0183               	clrf	3
   155  07FD  120A  118A  2F88   	ljmp	_main	;jump to C main() function
   156                           
   157                           	psect	cstackCOMMON
   158  0070                     __pcstackCOMMON:	
   159  0070                     ?_configTimer:	
   160  0070                     ??_configTimer:	
   161                           ; 1 bytes @ 0x0
   162                           
   163  0070                     ?_configADC:	
   164                           ; 1 bytes @ 0x0
   165                           
   166  0070                     ??_configADC:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     ?_configUART:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     ??_configUART:	
   173                           ; 1 bytes @ 0x0
   174                           
   175  0070                     ?_waitTimer:	
   176                           ; 1 bytes @ 0x0
   177                           
   178  0070                     ??_waitTimer:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0070                     ?_sendADC:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0070                     ??_sendADC:	
   185                           ; 1 bytes @ 0x0
   186                           
   187  0070                     ?_runADC:	
   188                           ; 1 bytes @ 0x0
   189                           
   190  0070                     ??_runADC:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ?_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196                           
   197                           ; 1 bytes @ 0x0
   198  0070                     	ds	2
   199  0072                     sendADC@aux:	
   200                           
   201                           ; 1 bytes @ 0x2
   202  0072                     	ds	1
   203  0073                     sendADC@parteB:	
   204                           
   205                           ; 1 bytes @ 0x3
   206  0073                     	ds	1
   207  0074                     sendADC@parteA:	
   208                           
   209                           ; 1 bytes @ 0x4
   210  0074                     	ds	1
   211  0075                     ??_main:	
   212                           
   213                           	psect	maintext
   214  0788                     __pmaintext:	
   215                           ; 1 bytes @ 0x5
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 72 in file "adc_main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, pclath, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : B00/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   235 ;;      Params:         0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called:    1
   241 ;; This function calls:
   242 ;;		_configADC
   243 ;;		_configTimer
   244 ;;		_configUART
   245 ;;		_runADC
   246 ;;		_sendADC
   247 ;;		_waitTimer
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _main
   255  0788                     _main:	
   256                           
   257                           ;adc_main.c: 73: TRISD=0X00;
   258                           
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   261  0788  1683               	bsf	3,5	;RP0=1, select bank1
   262  0789  1303               	bcf	3,6	;RP1=0, select bank1
   263  078A  0188               	clrf	8	;volatile
   264                           
   265                           ;adc_main.c: 74: TRISB=0XFF;
   266  078B  30FF               	movlw	255
   267  078C  0086               	movwf	6	;volatile
   268                           
   269                           ;adc_main.c: 76: configTimer();
   270  078D  120A  118A  276B  120A  118A  	fcall	_configTimer
   271                           
   272                           ;adc_main.c: 77: configADC();
   273  0792  120A  118A  2778  120A  118A  	fcall	_configADC
   274                           
   275                           ;adc_main.c: 78: configUART();
   276  0797  120A  118A  275F  120A  118A  	fcall	_configUART
   277                           
   278                           ;adc_main.c: 80: PORTD=0x0F;
   279  079C  300F               	movlw	15
   280  079D  1283               	bcf	3,5	;RP0=0, select bank0
   281  079E  1303               	bcf	3,6	;RP1=0, select bank0
   282  079F  0088               	movwf	8	;volatile
   283  07A0                     l570:	
   284                           ;adc_main.c: 82: while(1) {
   285                           
   286                           
   287                           ;adc_main.c: 83: waitTimer();
   288  07A0  120A  118A  2757  120A  118A  	fcall	_waitTimer
   289                           
   290                           ;adc_main.c: 84: runADC();
   291  07A5  120A  118A  2750  120A  118A  	fcall	_runADC
   292                           
   293                           ;adc_main.c: 85: waitTimer();
   294  07AA  120A  118A  2757  120A  118A  	fcall	_waitTimer
   295                           
   296                           ;adc_main.c: 86: sendADC();
   297  07AF  120A  118A  27B5  120A  118A  	fcall	_sendADC
   298  07B4  2FA0               	goto	l570
   299  07B5                     __end_of_main:	
   300                           
   301                           	psect	text1
   302  0757                     __ptext1:	
   303 ;; *************** function _waitTimer *****************
   304 ;; Defined at:
   305 ;;		line 38 in file "adc_main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   319 ;;      Params:         0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0
   321 ;;      Temps:          0       0       0       0       0
   322 ;;      Totals:         0       0       0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels used:    1
   325 ;; This function calls:
   326 ;;		Nothing
   327 ;; This function is called by:
   328 ;;		_main
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           
   333                           ;psect for function _waitTimer
   334  0757                     _waitTimer:	
   335  0757                     l46:	
   336                           ;adc_main.c: 40: ;
   337                           
   338                           ;adc_main.c: 39: while(INTCONbits.T0IF != 1)
   339                           
   340                           ;incstack = 0
   341                           ; Regs used in _waitTimer: [wreg]
   342                           
   343  0757  1D0B               	btfss	11,2	;volatile
   344  0758  2F57               	goto	l46
   345                           
   346                           ;adc_main.c: 41: TMR0 = 194;
   347  0759  30C2               	movlw	194
   348  075A  1283               	bcf	3,5	;RP0=0, select bank0
   349  075B  1303               	bcf	3,6	;RP1=0, select bank0
   350  075C  0081               	movwf	1	;volatile
   351                           
   352                           ;adc_main.c: 43: INTCONbits.T0IF = 0;
   353  075D  110B               	bcf	11,2	;volatile
   354  075E  0008               	return
   355  075F                     __end_of_waitTimer:	
   356                           
   357                           	psect	text2
   358  07B5                     __ptext2:	
   359 ;; *************** function _sendADC *****************
   360 ;; Defined at:
   361 ;;		line 46 in file "adc_main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  parteA          1    4[COMMON] unsigned char 
   366 ;;  parteB          1    3[COMMON] unsigned char 
   367 ;;  aux             1    2[COMMON] unsigned char 
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2, status,0
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         3       0       0       0       0
   379 ;;      Temps:          2       0       0       0       0
   380 ;;      Totals:         5       0       0       0       0
   381 ;;Total ram usage:        5 bytes
   382 ;; Hardware stack levels used:    1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_main
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           
   391                           ;psect for function _sendADC
   392  07B5                     _sendADC:	
   393                           
   394                           ;adc_main.c: 47: unsigned char parteB, parteA, aux;
   395                           ;adc_main.c: 48: parteA = ADRESH;
   396                           
   397                           ;incstack = 0
   398                           ; Regs used in _sendADC: [wreg+status,2+status,0]
   399  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   400  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   401  07B7  081E               	movf	30,w	;volatile
   402  07B8  00F0               	movwf	??_sendADC
   403  07B9  0870               	movf	??_sendADC,w
   404  07BA  00F4               	movwf	sendADC@parteA
   405                           
   406                           ;adc_main.c: 49: parteB = ADRESL;
   407  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   408  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   409  07BD  081E               	movf	30,w	;volatile
   410  07BE  00F0               	movwf	??_sendADC
   411  07BF  0870               	movf	??_sendADC,w
   412  07C0  00F3               	movwf	sendADC@parteB
   413                           
   414                           ;adc_main.c: 51: aux = parteA & 0x07;
   415  07C1  0874               	movf	sendADC@parteA,w
   416  07C2  3907               	andlw	7
   417  07C3  00F0               	movwf	??_sendADC
   418  07C4  0870               	movf	??_sendADC,w
   419  07C5  00F2               	movwf	sendADC@aux
   420                           
   421                           ;adc_main.c: 52: aux = aux << 2;
   422  07C6  0872               	movf	sendADC@aux,w
   423  07C7  00F0               	movwf	??_sendADC
   424  07C8  3001               	movlw	1
   425  07C9                     u25:	
   426  07C9  1003               	clrc
   427  07CA  0DF0               	rlf	??_sendADC,f
   428  07CB  3EFF               	addlw	-1
   429  07CC  1D03               	skipz
   430  07CD  2FC9               	goto	u25
   431  07CE  1003               	clrc
   432  07CF  0D70               	rlf	??_sendADC,w
   433  07D0  00F1               	movwf	??_sendADC+1
   434  07D1  0871               	movf	??_sendADC+1,w
   435  07D2  00F2               	movwf	sendADC@aux
   436                           
   437                           ;adc_main.c: 54: parteA = parteA >> 3;
   438  07D3  0874               	movf	sendADC@parteA,w
   439  07D4  00F0               	movwf	??_sendADC
   440  07D5  3003               	movlw	3
   441  07D6                     u35:	
   442  07D6  1003               	clrc
   443  07D7  0CF0               	rrf	??_sendADC,f
   444  07D8  3EFF               	addlw	-1
   445  07D9  1D03               	skipz
   446  07DA  2FD6               	goto	u35
   447  07DB  0870               	movf	??_sendADC,w
   448  07DC  00F1               	movwf	??_sendADC+1
   449  07DD  0871               	movf	??_sendADC+1,w
   450  07DE  00F4               	movwf	sendADC@parteA
   451                           
   452                           ;adc_main.c: 55: parteA = parteA | 0x80;
   453  07DF  0874               	movf	sendADC@parteA,w
   454  07E0  3880               	iorlw	128
   455  07E1  00F0               	movwf	??_sendADC
   456  07E2  0870               	movf	??_sendADC,w
   457  07E3  00F4               	movwf	sendADC@parteA
   458                           
   459                           ;adc_main.c: 57: parteB = parteB >> 6;
   460  07E4  0873               	movf	sendADC@parteB,w
   461  07E5  00F0               	movwf	??_sendADC
   462  07E6  3006               	movlw	6
   463  07E7                     u45:	
   464  07E7  1003               	clrc
   465  07E8  0CF0               	rrf	??_sendADC,f
   466  07E9  3EFF               	addlw	-1
   467  07EA  1D03               	skipz
   468  07EB  2FE7               	goto	u45
   469  07EC  0870               	movf	??_sendADC,w
   470  07ED  00F1               	movwf	??_sendADC+1
   471  07EE  0871               	movf	??_sendADC+1,w
   472  07EF  00F3               	movwf	sendADC@parteB
   473                           
   474                           ;adc_main.c: 58: parteB = parteB | aux;
   475  07F0  0873               	movf	sendADC@parteB,w
   476  07F1  0472               	iorwf	sendADC@aux,w
   477  07F2  00F0               	movwf	??_sendADC
   478  07F3  0870               	movf	??_sendADC,w
   479  07F4  00F3               	movwf	sendADC@parteB
   480                           
   481                           ;adc_main.c: 60: TXREG = parteB;
   482  07F5  0873               	movf	sendADC@parteB,w
   483  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   484  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   485  07F8  0099               	movwf	25	;volatile
   486                           
   487                           ;adc_main.c: 61: TXREG = parteA;
   488  07F9  0874               	movf	sendADC@parteA,w
   489  07FA  0099               	movwf	25	;volatile
   490  07FB  0008               	return
   491  07FC                     __end_of_sendADC:	
   492                           
   493                           	psect	text3
   494  0750                     __ptext3:	
   495 ;; *************** function _runADC *****************
   496 ;; Defined at:
   497 ;;		line 64 in file "adc_main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  t               1    0        unsigned char 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		None
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0
   514 ;;      Totals:         0       0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; This function calls:
   518 ;;		Nothing
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _runADC
   526  0750                     _runADC:	
   527                           
   528                           ;adc_main.c: 65: unsigned char t;
   529                           ;adc_main.c: 66: ADCON0bits.GO = 1;
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _runADC: []
   533  0750  1283               	bcf	3,5	;RP0=0, select bank0
   534  0751  1303               	bcf	3,6	;RP1=0, select bank0
   535  0752  149F               	bsf	31,1	;volatile
   536  0753                     l55:	
   537                           ;adc_main.c: 68: ;
   538                           
   539                           ;adc_main.c: 67: while(PIR1bits.ADIF != 1)
   540                           
   541  0753  1F0C               	btfss	12,6	;volatile
   542  0754  2F53               	goto	l55
   543                           
   544                           ;adc_main.c: 69: PIR1bits.ADIF = 0;
   545  0755  130C               	bcf	12,6	;volatile
   546  0756  0008               	return
   547  0757                     __end_of_runADC:	
   548                           
   549                           	psect	text4
   550  075F                     __ptext4:	
   551 ;; *************** function _configUART *****************
   552 ;; Defined at:
   553 ;;		line 30 in file "adc_main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		None
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         0       0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _configUART
   582  075F                     _configUART:	
   583                           
   584                           ;adc_main.c: 31: RCSTAbits.SPEN = 1;
   585                           
   586                           ;incstack = 0
   587                           ; Regs used in _configUART: []
   588  075F  1283               	bcf	3,5	;RP0=0, select bank0
   589  0760  1303               	bcf	3,6	;RP1=0, select bank0
   590  0761  1798               	bsf	24,7	;volatile
   591                           
   592                           ;adc_main.c: 32: RCSTAbits.CREN = 1;
   593  0762  1618               	bsf	24,4	;volatile
   594                           
   595                           ;adc_main.c: 33: TXSTAbits.BRGH = 1;
   596  0763  1683               	bsf	3,5	;RP0=1, select bank1
   597  0764  1303               	bcf	3,6	;RP1=0, select bank1
   598  0765  1518               	bsf	24,2	;volatile
   599                           
   600                           ;adc_main.c: 34: TXSTAbits.TXEN = 1;
   601  0766  1698               	bsf	24,5	;volatile
   602                           
   603                           ;adc_main.c: 35: PIR1bits.ADIF=0;
   604  0767  1283               	bcf	3,5	;RP0=0, select bank0
   605  0768  1303               	bcf	3,6	;RP1=0, select bank0
   606  0769  130C               	bcf	12,6	;volatile
   607  076A  0008               	return
   608  076B                     __end_of_configUART:	
   609                           
   610                           	psect	text5
   611  076B                     __ptext5:	
   612 ;; *************** function _configTimer *****************
   613 ;; Defined at:
   614 ;;		line 8 in file "adc_main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0
   631 ;;      Totals:         0       0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; This function calls:
   635 ;;		Nothing
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _configTimer
   643  076B                     _configTimer:	
   644                           
   645                           ;adc_main.c: 9: OSCCONbits.IRCF2 = 0;
   646                           
   647                           ;incstack = 0
   648                           ; Regs used in _configTimer: [wreg]
   649  076B  1683               	bsf	3,5	;RP0=1, select bank1
   650  076C  1303               	bcf	3,6	;RP1=0, select bank1
   651  076D  130F               	bcf	15,6	;volatile
   652                           
   653                           ;adc_main.c: 10: OSCCONbits.IRCF1 = 0;
   654  076E  128F               	bcf	15,5	;volatile
   655                           
   656                           ;adc_main.c: 11: OSCCONbits.IRCF0 = 1;
   657  076F  160F               	bsf	15,4	;volatile
   658                           
   659                           ;adc_main.c: 13: OPTION_REGbits.PSA = 0;
   660  0770  1181               	bcf	1,3	;volatile
   661                           
   662                           ;adc_main.c: 14: OPTION_REGbits.T0CS = 0;
   663  0771  1281               	bcf	1,5	;volatile
   664                           
   665                           ;adc_main.c: 15: INTCONbits.T0IF = 0;
   666  0772  110B               	bcf	11,2	;volatile
   667                           
   668                           ;adc_main.c: 16: TMR0 = 194;
   669  0773  30C2               	movlw	194
   670  0774  1283               	bcf	3,5	;RP0=0, select bank0
   671  0775  1303               	bcf	3,6	;RP1=0, select bank0
   672  0776  0081               	movwf	1	;volatile
   673  0777  0008               	return
   674  0778                     __end_of_configTimer:	
   675                           
   676                           	psect	text6
   677  0778                     __ptext6:	
   678 ;; *************** function _configADC *****************
   679 ;; Defined at:
   680 ;;		line 20 in file "adc_main.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		status,2
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   694 ;;      Params:         0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           
   708                           ;psect for function _configADC
   709  0778                     _configADC:	
   710                           
   711                           ;adc_main.c: 21: ADCON0bits.ADON = 1;
   712                           
   713                           ;incstack = 0
   714                           ; Regs used in _configADC: [status,2]
   715  0778  1283               	bcf	3,5	;RP0=0, select bank0
   716  0779  1303               	bcf	3,6	;RP1=0, select bank0
   717  077A  141F               	bsf	31,0	;volatile
   718                           
   719                           ;adc_main.c: 22: ADCON0bits.CHS3 = 1;
   720  077B  169F               	bsf	31,5	;volatile
   721                           
   722                           ;adc_main.c: 23: ADCON0bits.ADCS1 = 0;
   723  077C  139F               	bcf	31,7	;volatile
   724                           
   725                           ;adc_main.c: 24: ADCON1bits.ADFM = 0;
   726  077D  1683               	bsf	3,5	;RP0=1, select bank1
   727  077E  1303               	bcf	3,6	;RP1=0, select bank1
   728  077F  139F               	bcf	31,7	;volatile
   729                           
   730                           ;adc_main.c: 25: ANSEL= 0;
   731  0780  1683               	bsf	3,5	;RP0=1, select bank3
   732  0781  1703               	bsf	3,6	;RP1=1, select bank3
   733  0782  0188               	clrf	8	;volatile
   734                           
   735                           ;adc_main.c: 26: ANSELH = 0;
   736  0783  0189               	clrf	9	;volatile
   737                           
   738                           ;adc_main.c: 27: ADRESL = 0;
   739  0784  1683               	bsf	3,5	;RP0=1, select bank1
   740  0785  1303               	bcf	3,6	;RP1=0, select bank1
   741  0786  019E               	clrf	30	;volatile
   742  0787  0008               	return
   743  0788                     __end_of_configADC:	
   744  007E                     btemp	set	126	;btemp
   745  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sendADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     135
                          _configADC
                        _configTimer
                         _configUART
                             _runADC
                            _sendADC
                          _waitTimer
 ---------------------------------------------------------------------------------
 (1) _waitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendADC                                              5     5      0     135
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _runADC                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _configUART                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configTimer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configADC
   _configTimer
   _configUART
   _runADC
   _sendADC
   _waitTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Jun  9 21:44:19 2018

                      l46 0757                        l55 0753                        u25 07C9  
                      u35 07D6                        u45 07E7                       l570 07A0  
                    _TMR0 0001                      _main 0788                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000           __end_of_sendADC 07FC                     status 0003  
                   wtemp0 007E           __initialization 07FC              __end_of_main 07B5  
                  ??_main 0075                    _ADRESH 001E                    _ADRESL 009E  
                  _ANSELH 0189      __size_of_configTimer 000D                    _runADC 0750  
               ??_sendADC 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
          _OPTION_REGbits 0081        __size_of_configADC 0010                __pmaintext 0788  
                 ?_runADC 0070        __size_of_waitTimer 0008                _configUART 075F  
       __end_of_configADC 0788           __size_of_runADC 0007                   __ptext1 0757  
                 __ptext2 07B5                   __ptext3 0750                   __ptext4 075F  
                 __ptext5 076B                   __ptext6 0778                   _sendADC 07B5  
    end_of_initialization 07FC         __end_of_waitTimer 075F                 _RCSTAbits 0018  
             ?_configUART 0070                 _TXSTAbits 0098             ??_configTimer 0070  
          __end_of_runADC 0757       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __size_of_configUART 000C       __end_of_configTimer 0778                  ??_runADC 0070  
              sendADC@aux 0072                 ___latbits 0002                 _configADC 0778  
                ?_sendADC 0070               _configTimer 076B                  _PIR1bits 000C  
               _waitTimer 0757                ?_configADC 0070                _ADCON0bits 001F  
              _ADCON1bits 009F              ??_configUART 0070        __end_of_configUART 076B  
              ?_waitTimer 0070          __size_of_sendADC 0047             __size_of_main 002D  
             ??_configADC 0070                _INTCONbits 000B                _OSCCONbits 008F  
             ??_waitTimer 0070             sendADC@parteA 0074             sendADC@parteB 0073  
            ?_configTimer 0070  
