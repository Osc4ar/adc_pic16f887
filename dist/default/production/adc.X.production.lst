

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun  8 07:38:15 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	dabs	1,0x7E,2
     8  0000                     
     9                           ; Version 1.45
    10                           ; Generated 16/11/2017 GMT
    11                           ; 
    12                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    13                           ; All rights reserved.
    14                           ; 
    15                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    16                           ; 
    17                           ; Redistribution and use in source and binary forms, with or without modification, are
    18                           ; permitted provided that the following conditions are met:
    19                           ; 
    20                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    21                           ;        conditions and the following disclaimer.
    22                           ; 
    23                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    24                           ;        of conditions and the following disclaimer in the documentation and/or other
    25                           ;        materials provided with the distribution.
    26                           ; 
    27                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    28                           ;        software without specific prior written permission.
    29                           ; 
    30                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    31                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    32                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    33                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    34                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    35                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    36                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    37                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    38                           ; 
    39                           ; 
    40                           ; Code-generator required, PIC16F887 Definitions
    41                           ; 
    42                           ; SFR Addresses
    43  0000                     	;# 
    44  0001                     	;# 
    45  0002                     	;# 
    46  0003                     	;# 
    47  0004                     	;# 
    48  0005                     	;# 
    49  0006                     	;# 
    50  0007                     	;# 
    51  0008                     	;# 
    52  0009                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001B                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  001D                     	;# 
    76  001E                     	;# 
    77  001F                     	;# 
    78  0081                     	;# 
    79  0085                     	;# 
    80  0086                     	;# 
    81  0087                     	;# 
    82  0088                     	;# 
    83  0089                     	;# 
    84  008C                     	;# 
    85  008D                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0093                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0097                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009A                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  0105                     	;# 
   107  0107                     	;# 
   108  0108                     	;# 
   109  0109                     	;# 
   110  010C                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0185                     	;# 
   116  0187                     	;# 
   117  0188                     	;# 
   118  0189                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  0019                     _TXREG	set	25
   122  001E                     _ADRESH	set	30
   123  0001                     _TMR0	set	1
   124  0008                     _PORTD	set	8
   125  000C                     _PIR1bits	set	12
   126  000B                     _INTCONbits	set	11
   127  0018                     _RCSTAbits	set	24
   128  001F                     _ADCON0bits	set	31
   129  009E                     _ADRESL	set	158
   130  0098                     _TXSTAbits	set	152
   131  009F                     _ADCON1bits	set	159
   132  0081                     _OPTION_REGbits	set	129
   133  008F                     _OSCCONbits	set	143
   134  0086                     _TRISB	set	134
   135  0088                     _TRISD	set	136
   136  0189                     _ANSELH	set	393
   137  0188                     _ANSEL	set	392
   138                           
   139                           ; #config settings
   140  0000                     
   141                           	psect	cinit
   142  07FC                     start_initialization:	
   143  07FC                     __initialization:	
   144  07FC                     end_of_initialization:	
   145                           ;End of C runtime variable initialization code
   146                           
   147  07FC                     __end_of__initialization:	
   148  07FC  0183               	clrf	3
   149  07FD  120A  118A  2F7E   	ljmp	_main	;jump to C main() function
   150                           
   151                           	psect	cstackCOMMON
   152  0070                     __pcstackCOMMON:	
   153  0070                     ?_main:	
   154  0070                     ??_main:	
   155                           ; 1 bytes @ 0x0
   156                           
   157                           
   158                           ; 1 bytes @ 0x0
   159  0070                     	ds	2
   160  0072                     main@aux:	
   161                           
   162                           ; 1 bytes @ 0x2
   163  0072                     	ds	1
   164  0073                     main@parteB:	
   165                           
   166                           ; 1 bytes @ 0x3
   167  0073                     	ds	1
   168  0074                     main@parteA:	
   169                           
   170                           ; 1 bytes @ 0x4
   171  0074                     	ds	1
   172                           
   173                           	psect	maintext
   174  077E                     __pmaintext:	
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 8 in file "adc_main.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;  parteA          1    4[COMMON] unsigned char 
   185 ;;  parteB          1    3[COMMON] unsigned char 
   186 ;;  aux             1    2[COMMON] unsigned char 
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, status,2, status,0
   191 ;; Tracked objects:
   192 ;;		On entry : B00/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   196 ;;      Params:         0       0       0       0       0
   197 ;;      Locals:         3       0       0       0       0
   198 ;;      Temps:          2       0       0       0       0
   199 ;;      Totals:         5       0       0       0       0
   200 ;;Total ram usage:        5 bytes
   201 ;; This function calls:
   202 ;;		Nothing
   203 ;; This function is called by:
   204 ;;		Startup code after reset
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           
   209                           ;psect for function _main
   210  077E                     _main:	
   211                           
   212                           ;adc_main.c: 9: unsigned char parteB, parteA, aux;
   213                           ;adc_main.c: 11: TRISD=0X00;
   214                           
   215                           ;incstack = 0
   216                           ; Regs used in _main: [wreg+status,2+status,0]
   217  077E  1683               	bsf	3,5	;RP0=1, select bank1
   218  077F  1303               	bcf	3,6	;RP1=0, select bank1
   219  0780  0188               	clrf	8	;volatile
   220                           
   221                           ;adc_main.c: 12: TRISB=0XFF;
   222  0781  30FF               	movlw	255
   223  0782  0086               	movwf	6	;volatile
   224                           
   225                           ;adc_main.c: 13: ADCON0bits.ADON=1;
   226  0783  1283               	bcf	3,5	;RP0=0, select bank0
   227  0784  1303               	bcf	3,6	;RP1=0, select bank0
   228  0785  141F               	bsf	31,0	;volatile
   229                           
   230                           ;adc_main.c: 16: OSCCONbits.IRCF2 = 0;
   231  0786  1683               	bsf	3,5	;RP0=1, select bank1
   232  0787  1303               	bcf	3,6	;RP1=0, select bank1
   233  0788  130F               	bcf	15,6	;volatile
   234                           
   235                           ;adc_main.c: 17: OPTION_REGbits.PS1 = 0;
   236  0789  1081               	bcf	1,1	;volatile
   237                           
   238                           ;adc_main.c: 18: OPTION_REGbits.PSA = 0;
   239  078A  1181               	bcf	1,3	;volatile
   240                           
   241                           ;adc_main.c: 19: OPTION_REGbits.T0CS = 0;
   242  078B  1281               	bcf	1,5	;volatile
   243                           
   244                           ;adc_main.c: 21: OPTION_REGbits.T0CS=0;
   245  078C  1281               	bcf	1,5	;volatile
   246                           
   247                           ;adc_main.c: 22: ADCON0bits.CHS3=1;
   248  078D  1283               	bcf	3,5	;RP0=0, select bank0
   249  078E  1303               	bcf	3,6	;RP1=0, select bank0
   250  078F  169F               	bsf	31,5	;volatile
   251                           
   252                           ;adc_main.c: 23: ADCON0bits.ADCS1=0;
   253  0790  139F               	bcf	31,7	;volatile
   254                           
   255                           ;adc_main.c: 24: ADCON1bits.ADFM=0;
   256  0791  1683               	bsf	3,5	;RP0=1, select bank1
   257  0792  1303               	bcf	3,6	;RP1=0, select bank1
   258  0793  139F               	bcf	31,7	;volatile
   259                           
   260                           ;adc_main.c: 25: RCSTAbits.SPEN = 1;
   261  0794  1283               	bcf	3,5	;RP0=0, select bank0
   262  0795  1303               	bcf	3,6	;RP1=0, select bank0
   263  0796  1798               	bsf	24,7	;volatile
   264                           
   265                           ;adc_main.c: 26: RCSTAbits.CREN = 1;
   266  0797  1618               	bsf	24,4	;volatile
   267                           
   268                           ;adc_main.c: 27: TXSTAbits.BRGH = 1;
   269  0798  1683               	bsf	3,5	;RP0=1, select bank1
   270  0799  1303               	bcf	3,6	;RP1=0, select bank1
   271  079A  1518               	bsf	24,2	;volatile
   272                           
   273                           ;adc_main.c: 28: TXSTAbits.TXEN = 1;
   274  079B  1698               	bsf	24,5	;volatile
   275                           
   276                           ;adc_main.c: 29: ANSEL=0;
   277  079C  1683               	bsf	3,5	;RP0=1, select bank3
   278  079D  1703               	bsf	3,6	;RP1=1, select bank3
   279  079E  0188               	clrf	8	;volatile
   280                           
   281                           ;adc_main.c: 30: ANSELH=0;
   282  079F  0189               	clrf	9	;volatile
   283                           
   284                           ;adc_main.c: 31: ADRESL=0;
   285  07A0  1683               	bsf	3,5	;RP0=1, select bank1
   286  07A1  1303               	bcf	3,6	;RP1=0, select bank1
   287  07A2  019E               	clrf	30	;volatile
   288                           
   289                           ;adc_main.c: 32: INTCONbits.T0IF=0;
   290  07A3  110B               	bcf	11,2	;volatile
   291                           
   292                           ;adc_main.c: 33: PIR1bits.ADIF=0;
   293  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   294  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   295  07A6  130C               	bcf	12,6	;volatile
   296                           
   297                           ;adc_main.c: 34: PORTD=0x0F;
   298  07A7  300F               	movlw	15
   299  07A8  0088               	movwf	8	;volatile
   300                           
   301                           ;adc_main.c: 35: TMR0=254;
   302  07A9  30FE               	movlw	254
   303  07AA  0081               	movwf	1	;volatile
   304  07AB                     l40:	
   305                           ;adc_main.c: 38: ;
   306                           
   307                           ;adc_main.c: 37: while(INTCONbits.T0IF != 1)
   308                           
   309                           ;adc_main.c: 36: while(1){
   310                           
   311  07AB  1D0B               	btfss	11,2	;volatile
   312  07AC  2FAB               	goto	l40
   313                           
   314                           ;adc_main.c: 39: TMR0 = 0;
   315  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   316  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   317  07AF  0181               	clrf	1	;volatile
   318                           
   319                           ;adc_main.c: 43: INTCONbits.T0IF=0;
   320  07B0  110B               	bcf	11,2	;volatile
   321                           
   322                           ;adc_main.c: 44: ADCON0bits.GO=1;
   323  07B1  149F               	bsf	31,1	;volatile
   324  07B2                     l43:	
   325                           ;adc_main.c: 45: while(PIR1bits.ADIF!=1);
   326                           
   327  07B2  1F0C               	btfss	12,6	;volatile
   328  07B3  2FB2               	goto	l43
   329                           
   330                           ;adc_main.c: 46: PIR1bits.ADIF=0;
   331  07B4  130C               	bcf	12,6	;volatile
   332  07B5                     l46:	
   333                           ;adc_main.c: 47: while(PIR1bits.TXIF != 1);
   334                           
   335  07B5  1E0C               	btfss	12,4	;volatile
   336  07B6  2FB5               	goto	l46
   337                           
   338                           ;adc_main.c: 49: parteA = ADRESH;
   339  07B7  081E               	movf	30,w	;volatile
   340  07B8  00F0               	movwf	??_main
   341  07B9  0870               	movf	??_main,w
   342  07BA  00F4               	movwf	main@parteA
   343                           
   344                           ;adc_main.c: 50: parteB = ADRESL;
   345  07BB  1683               	bsf	3,5	;RP0=1, select bank1
   346  07BC  1303               	bcf	3,6	;RP1=0, select bank1
   347  07BD  081E               	movf	30,w	;volatile
   348  07BE  00F0               	movwf	??_main
   349  07BF  0870               	movf	??_main,w
   350  07C0  00F3               	movwf	main@parteB
   351                           
   352                           ;adc_main.c: 52: aux = parteA & 0x07;
   353  07C1  0874               	movf	main@parteA,w
   354  07C2  3907               	andlw	7
   355  07C3  00F0               	movwf	??_main
   356  07C4  0870               	movf	??_main,w
   357  07C5  00F2               	movwf	main@aux
   358                           
   359                           ;adc_main.c: 53: aux = aux << 2;
   360  07C6  0872               	movf	main@aux,w
   361  07C7  00F0               	movwf	??_main
   362  07C8  3001               	movlw	1
   363  07C9                     u45:	
   364  07C9  1003               	clrc
   365  07CA  0DF0               	rlf	??_main,f
   366  07CB  3EFF               	addlw	-1
   367  07CC  1D03               	skipz
   368  07CD  2FC9               	goto	u45
   369  07CE  1003               	clrc
   370  07CF  0D70               	rlf	??_main,w
   371  07D0  00F1               	movwf	??_main+1
   372  07D1  0871               	movf	??_main+1,w
   373  07D2  00F2               	movwf	main@aux
   374                           
   375                           ;adc_main.c: 55: parteA = parteA >> 3;
   376  07D3  0874               	movf	main@parteA,w
   377  07D4  00F0               	movwf	??_main
   378  07D5  3003               	movlw	3
   379  07D6                     u55:	
   380  07D6  1003               	clrc
   381  07D7  0CF0               	rrf	??_main,f
   382  07D8  3EFF               	addlw	-1
   383  07D9  1D03               	skipz
   384  07DA  2FD6               	goto	u55
   385  07DB  0870               	movf	??_main,w
   386  07DC  00F1               	movwf	??_main+1
   387  07DD  0871               	movf	??_main+1,w
   388  07DE  00F4               	movwf	main@parteA
   389                           
   390                           ;adc_main.c: 56: parteA = parteA | 0x80;
   391  07DF  0874               	movf	main@parteA,w
   392  07E0  3880               	iorlw	128
   393  07E1  00F0               	movwf	??_main
   394  07E2  0870               	movf	??_main,w
   395  07E3  00F4               	movwf	main@parteA
   396                           
   397                           ;adc_main.c: 58: parteB = parteB >> 6;
   398  07E4  0873               	movf	main@parteB,w
   399  07E5  00F0               	movwf	??_main
   400  07E6  3006               	movlw	6
   401  07E7                     u65:	
   402  07E7  1003               	clrc
   403  07E8  0CF0               	rrf	??_main,f
   404  07E9  3EFF               	addlw	-1
   405  07EA  1D03               	skipz
   406  07EB  2FE7               	goto	u65
   407  07EC  0870               	movf	??_main,w
   408  07ED  00F1               	movwf	??_main+1
   409  07EE  0871               	movf	??_main+1,w
   410  07EF  00F3               	movwf	main@parteB
   411                           
   412                           ;adc_main.c: 59: parteB = parteB | aux;
   413  07F0  0873               	movf	main@parteB,w
   414  07F1  0472               	iorwf	main@aux,w
   415  07F2  00F0               	movwf	??_main
   416  07F3  0870               	movf	??_main,w
   417  07F4  00F3               	movwf	main@parteB
   418                           
   419                           ;adc_main.c: 61: TXREG = parteB;
   420  07F5  0873               	movf	main@parteB,w
   421  07F6  1283               	bcf	3,5	;RP0=0, select bank0
   422  07F7  1303               	bcf	3,6	;RP1=0, select bank0
   423  07F8  0099               	movwf	25	;volatile
   424                           
   425                           ;adc_main.c: 62: TXREG = parteA;
   426  07F9  0874               	movf	main@parteA,w
   427  07FA  0099               	movwf	25	;volatile
   428  07FB  2FAB               	goto	l40
   429  07FC                     __end_of_main:	
   430  007E                     btemp	set	126	;btemp
   431  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     135
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun  8 07:38:15 2018

                      l40 07AB                        l43 07B2                        l46 07B5  
                      u45 07C9                        u55 07D6                        u65 07E7  
                    _TMR0 0001                      _main 077E                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000                     status 0003                     wtemp0 007E  
         __initialization 07FC              __end_of_main 07FC                    ??_main 0070  
                  _ADRESH 001E                    _ADRESL 009E                    _ANSELH 0189  
 __end_of__initialization 07FC            __pcstackCOMMON 0070            _OPTION_REGbits 0081  
              __pmaintext 077E                   main@aux 0072      end_of_initialization 07FC  
               _RCSTAbits 0018                 _TXSTAbits 0098                main@parteA 0074  
              main@parteB 0073       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ___latbits 0002                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F             __size_of_main 007E                _INTCONbits 000B  
              _OSCCONbits 008F  
